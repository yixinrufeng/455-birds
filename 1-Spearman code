# Ecological parameters
setwd("path")
getwd()
install.packages("openxlsx")
library(corrplot)
library(car)
library(openxlsx)

# Load data
data <- read.csv("ecological_parameters.csv", header = TRUE)

# Check data types
cat("Data types:\n")
str(data)

# Define columns to analyze (all variables of interest)
analysis_cols <- c("Mass", "Beak_Length_Culmen", "Beak_Length_Nares", "Beak_Width", 
                   "Beak_Depth", "Tarsus_Length", "Wing_Length", "Kipps_Distance", 
                   "Secondary1", "Hand_Wing_Index", "Tail_Length", "Clutch_size", 
                   "Generation_time", "Range_Size", "Primary_Lifestyle", "Migration", 
                   "Trophic_Level", "Centroid_Latitude")

# Check and convert numeric columns
for (col in analysis_cols) {
  if (!is.numeric(data[[col]])) {
    cat(col, "is not numeric. Converting to numeric...\n")
    data[[col]] <- as.numeric(as.character(data[[col]]))
    if (any(is.na(data[[col]]))) {
      cat("Found non-numeric values in", col, ". Replacing with NA.\n")
    }
  }
}

# Calculate Spearman correlation matrix (using raw data)
cor_matrix <- cor(data[, analysis_cols], 
                  use = "complete.obs", 
                  method = "spearman")

# Print correlation matrix
print(cor_matrix)

# Save correlation matrix as Excel file
write.xlsx(cor_matrix, file = "ecological_parameters_Spearman_correlation_matrix.xlsx")

# Save correlation matrix visualization as PDF
pdf("ecological_parameters_Spearman_correlation_matrix_plot.pdf", width = 12, height = 12)
corrplot(cor_matrix, 
         method = "circle",    # use circles to represent correlation
         type = "upper",       # show only upper triangle
         order = "hclust",     # hierarchical clustering order
         tl.col = "black",     # label color
         tl.srt = 45,          # label rotation angle
         title = "Spearman Correlation Matrix",  # add title
         mar = c(0, 0, 2, 0))  # adjust margins
dev.off()


# Demographic history parameters
setwd("D:/05_Thesis3.0/2_parameter_autocorrelation/2_demographic_history_parameters")
getwd()
install.packages("openxlsx")
library(corrplot)
library(car)
library(openxlsx)

# Load data
data <- read.csv("demographic_history_parameters.csv", header = TRUE)

# Check data types
cat("Data types:\n")
str(data)

# Define columns to analyze (all variables of interest)
analysis_cols <- c("Heterozygosity", "Minimum", "Harm_mean_Ne")

# Check and convert numeric columns
for (col in analysis_cols) {
  if (!is.numeric(data[[col]])) {
    cat(col, "is not numeric. Converting to numeric...\n")
    data[[col]] <- as.numeric(as.character(data[[col]]))
    if (any(is.na(data[[col]]))) {
      cat("Found non-numeric values in", col, ". Replacing with NA.\n")
    }
  }
}

# Remove rows containing NA
data <- na.omit(data)

# Calculate Spearman correlation matrix (using raw data)
cor_matrix <- cor(data[, analysis_cols], 
                  use = "complete.obs", 
                  method = "spearman")

# Print correlation matrix
print(cor_matrix)

# Save correlation matrix as Excel file
write.xlsx(cor_matrix, file = "demographic_history_parameters_Spearman_correlation_matrix.xlsx")

# Save correlation matrix visualization as PDF
pdf("demographic_history_parameters_Spearman_correlation_matrix_plot.pdf", width = 12, height = 12)
corrplot(cor_matrix, 
         method = "circle",    # use circles to represent correlation
         type = "upper",       # show only upper triangle
         order = "hclust",     # hierarchical clustering order
         tl.col = "black",     # label color
         tl.srt = 45,          # label rotation angle
         title = "Spearman Correlation Matrix",  # add title
         mar = c(0, 0, 2, 0))  # adjust margins
dev.off()
