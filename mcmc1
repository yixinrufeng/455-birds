# Package manager
library(pacman)
p_load(
  patchwork, ggtree, ape, phytools, dplyr, readxl, stringr, viridis,
  reshape2, cowplot, ggthemes, ggimage, RColorBrewer, scales, forcats,
  readr, caper, yhat, ggrepel, GGally, MCMCglmm, purrr
)

# Phylogenetic comparative analysis helpers
source("/raid6/bird/hp/mcmcglmm/martin.R")

## What this script does:
# - Fit MCMCglmm models for Heterozygosity ~ Hand_Wing_Index + Range_Size
# - Save fitted models and diagnostics
# - Save convergence plots and R2/structure-coefficient outputs

# Switches
modeling    <- TRUE
save_models <- TRUE
plotting    <- TRUE
save_plots  <- TRUE

# Working dir
setwd("/raid6/bird/hp/mcmcglmm/Cytb")

# Load (modified) phylogeny
# (original note: 26 species from 10ktrees plus 3 subspecies of ringed seal)
tree_final <- read.tree("/raid6/bird/hp/mcmcglmm/tree.newick")

# Load data for modeling
all_stats <- as.data.frame(readr::read_csv("Cytb_data.csv"))

# Construct inverse phylogenetic matrix and priors
inv_phylo <- inverseA(tree_final, nodes = "TIPS", scale = FALSE)$Ainv
prior <- list(G = list(G1 = list(V = 1, nu = 0.002)),
              R = list(V = 1, nu = 0.002))

# =========================================
# Data standardization / variable transforms
# =========================================
# Standardize by 2*SD to make coefficients comparable (Gelman 2008; Schielzeth 2014)
stats_mod_genlh <- all_stats %>%
  mutate(
    Hand_Wing_Index = (Hand_Wing_Index - mean(Hand_Wing_Index, na.rm = TRUE)) /
                      (2 * sd(Hand_Wing_Index,   na.rm = TRUE)),
    Range_Size      = (Range_Size      - mean(Range_Size,      na.rm = TRUE)) /
                      (2 * sd(Range_Size,        na.rm = TRUE))
  )

# =================
# MCMC settings
# =================
nitt   <- 110000
burnin <- 10000
thin   <- 100

# -------------------------------------------------------
# Model: genetic diversity vs. life-history (example)
# -------------------------------------------------------
# Updated run_mod() wrapper with fixed hyperparameters
run_mod <- function(iter) {
  MCMCglmm(
    Heterozygosity ~ Hand_Wing_Index + Range_Size,
    random   = ~ tip_label,
    nodes    = "TIPS",
    family   = "gaussian",
    ginverse = list(tip_label = inv_phylo),
    prior    = prior,
    data     = stats_mod_genlh,
    nitt     = nitt, burnin = burnin, thin = thin
  )
}

# Ensure output directories exist (safe to keep even if they already exist)
if (!dir.exists("output/mcmcmodels")) dir.create("output/mcmcmodels", recursive = TRUE)
if (!dir.exists("output/plots"))      dir.create("output/plots",      recursive = TRUE)

# Model name and cache file
mod_name        <- "gendiv_vs_lh_plus_bot"
model_file_name <- paste0(mod_name, ".RData")

# Run or load models
if (!file.exists(file.path("output/mcmcmodels", model_file_name))) {
  set.seed(1234)
  models <- purrr::map(1:3, run_mod)
  saveRDS(models, file = file.path("output/mcmcmodels", model_file_name))
}

models    <- readr::read_rds(file.path("output/mcmcmodels", model_file_name))
mod_genlh <- models[[1]]

# ============================
# Convergence / diagnostics
# ============================
# MCMC chain diagnostics across 3 runs
plot(mcmc.list(models[[1]]$Sol, models[[2]]$Sol, models[[3]]$Sol))
gelman.diag(mcmc.list(models[[1]]$Sol, models[[2]]$Sol, models[[3]]$Sol))

# Summary of one chain
summary(mod_genlh)

# Visual inspection of chain convergence
plot(mod_genlh$Sol)
plot(mod_genlh$VCV)
autocorr(mod_genlh$Sol)
autocorr(mod_genlh$VCV)

# Variance explained by phylogeny
var_phy <- mod_genlh$VCV[, "tip_label"] / (mod_genlh$VCV[, "tip_label"] + mod_genlh$VCV[, "units"])
posterior.mode(var_phy)
median(var_phy)
HPDinterval(var_phy)

# ============================
# Save diagnostic plots
# ============================
# Trace plots for mcmc.list (three runs)
pdf("output/plots/trace_plots.pdf", width = 10, height = 8)
plot(mcmc.list(models[[1]]$Sol, models[[2]]$Sol, models[[3]]$Sol))
dev.off()

# Trace plots for a single model (fixed effects / random-effect variances)
pdf("output/plots/mod_genlh_Sol_trace.pdf",  width = 10, height = 6); plot(mod_genlh$Sol);  dev.off()
pdf("output/plots/mod_genlh_VCV_trace.pdf",  width = 10, height = 6); plot(mod_genlh$VCV);  dev.off()

# Autocorrelation plots
pdf("output/plots/mod_genlh_Sol_autocorr.pdf", width = 8, height = 6); autocorr.plot(mod_genlh$Sol); dev.off()
pdf("output/plots/mod_genlh_VCV_autocorr.pdf", width = 8, height = 6); autocorr.plot(mod_genlh$VCV); dev.off()

# ============================
# R2 (marginal / conditional) and structure coefficients
# ============================
library(mcmcR2)
set.seed(312)

for (r2type in c("marginal", "conditional")) {
  model_file_name_R2 <- paste0(mod_name, "_R2_", r2type)

  set.seed(324)
  R2_genlh <- mcmcR2::partR2(
    mod_genlh,
    partvars = c("Hand_Wing_Index", "Range_Size"),
    type     = r2type,
    data     = stats_mod_genlh,
    inv_phylo = inv_phylo,
    prior     = prior,
    nitt      = nitt, burnin = burnin, thin = thin
  )

  saveRDS(R2_genlh, file = file.path("output/mcmcmodels", paste0(model_file_name_R2, ".RData")))
  R2_genlh$R2 %>% write_delim(file.path("output/mcmcmodels", paste0(model_file_name_R2, ".txt")))
}

R2_genlh$SC %>% write_delim(file.path("output/mcmcmodels", paste0(mod_name, "_SC.txt")))

# ============================
# Save posterior summary table
# ============================
mod_genlh %>%
  summary() %$%
  solutions %>%
  as.data.frame() %>%
  tibble::rownames_to_column("components") %>%
  mutate(post_median = apply(mod_genlh$Sol, 2, median)) %>%
  mutate(post_mode   = posterior.mode(mod_genlh$Sol)) %>%
  .[c(1, 2, 7, 8, 3:6)] %>%
  rename(
    post_mean = post.mean,
    lower     = "l-95% CI",
    upper     = "u-95% CI"
  ) %>%
  write_delim(file.path("output/mcmcmodels", paste0(mod_name, "_beta.txt")))

beta_genlh <- readr::read_delim(file.path("output/mcmcmodels", paste0(mod_name, "_beta.txt")), delim = " ")
